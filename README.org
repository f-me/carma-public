* Prerequisites
  - we aim at GHC 7.8.3 compatibility;

  - snap-0.13 is required;

  - bootstrap-typeahead is custom (source is a dictionary entry (see
    below), source annotation is eval'd, show on click)

  - bootstrap-datepicker is custom (data API, optional autoshow)
* Field meta
  `meta` bag of every field contains *client-only* annotations.

  Supported annotations:

  - `dictionaryName`: set name of dictionary when field type is
    `dictionary` (see section below)

  - `dictionaryParent`: set parent dictionary for dependent dictionary
    (see section below)

  - `regexp`: must contain label for entry of "_regexps" dictionary,
    value of which is a regular expression as JavaScript string
    (remember to escape backslashes!). When provided, highlight field
    with «warning» outline if its contents do not match regular
    expression. Knockout model will provide `<fieldName>Regexp`
    observable (which is the inverse of check result).

  - `mainToo`: when specified in member of group, field is rendered in
    main pane, too (in addition to rendering in view of group)

  - `mainOnly`: render member of group in main section only. When
    specified for first member of group, no link to central pane is
    rendered.

  - `readonly`: render field as readonly. To really set permissions,
    use canRead/canWrite

  - `widget`: override template used for field (can specify `radio`
    for dictionary fields here to use `radio-field-template` instead
    of `dictionary-field-template`. See also pickTemplate @
    viewsware.coffee)

  - `reference-widget`: override template used for rendering reference
    container (like `widget` meta, but for `reference-template`s
    instead of `field-templates`s)

  - `single-uploader`: when true, if `inline-uploader` widget is used,
    then uploader is shown only when no files have been attached in
    that field yet

  - `required`: highlight field with red outline and show it in
    rightmost pane when it's empty

  - `invisible`: do not show field at all

  - `infoText`: extra tip for field to show in hover bubble

  - `targetCoords`, `targetMap`, `targetAddr`, `targetPartner`,
    `cityField` and such: used to specify fields to show and receive
    geocoding information; documented in geopicker and initOSM docs in
    `map.coffee`

  - `distanceTo1` and `distanceTo2`: when both metas present, the
    field will be updated with the distance between two coordinates
    set in the referenced fields. See `distHook`.

  - `nosql`: when true, do not sync field to Postgres, which is useful
    when simulating faux client-only fields processed by triggers
    only.

  Non-meta field annotations are described in [[https://github.com/f-me/snaplet-redson/blob/master/README.org][snaplet-redson]] docs.
